[gd_scene load_steps=6 format=3 uid="uid://bdu7h1l1jg443"]

[sub_resource type="Shader" id="Shader_c6ksv"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx, vertex_lighting;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	// Shading Mode: Per Vertex
	ROUGHNESS = roughness;

	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ko7u7"]
noise_type = 4
frequency = 0.0439
offset = Vector3(848.48, 0, 0)

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_1u57p"]
width = 1000
height = 1000
in_3d_space = true
seamless = true
seamless_blend_skirt = 1.0
as_normal_map = true
bump_strength = 32.0
noise = SubResource("FastNoiseLite_ko7u7")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_02eut"]
render_priority = 0
shader = SubResource("Shader_c6ksv")
shader_parameter/albedo = Color(0.462291, 0.462291, 0.462291, 1)
shader_parameter/point_size = 0.1
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_roughness = SubResource("NoiseTexture2D_1u57p")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_oj5ma"]
shading_mode = 2
albedo_color = Color(0.462291, 0.462291, 0.462291, 1)
metallic_specular = 0.0
roughness_texture = SubResource("NoiseTexture2D_1u57p")
emission_energy_multiplier = 0.0

[node name="Node3D" type="Node3D"]

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="."]
transform = Transform3D(-0.00280992, -0.999996, 0, 0.999996, -0.00280992, 0, 0, 0, 1, 0, 0, 0)
use_collision = true
radius = 0.47
sides = 12
material = SubResource("ShaderMaterial_02eut")

[node name="CSGCylinder3D2" type="CSGCylinder3D" parent="CSGCylinder3D"]
transform = Transform3D(0.857283, 7.45058e-09, 0, -1.49012e-08, 1.00973, 0, 0, 0, 0.872854, 0, 0, 0)
operation = 2
sides = 12
material = SubResource("StandardMaterial3D_oj5ma")
